{"version":3,"sources":["components/card/card-component.tsx","components/card-list/card-list-component.tsx","store/cards-store.ts","mocks/cards-data.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","title","description","imgUrl","rotation","rotate","id","isStar","className","alt","src","style","transform","onClick","CARDSAPPSESSIONSTORAGE","sessionData","sessionStorage","getItem","cardsStore","cards","rotateCard","card","find","undefined","makeAutoObservable","this","JSON","parse","CardList","observer","useEffect","console","log","sessionCards","stringify","setItem","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAaaA,EAAO,SAAC,GAA0F,IAAxFC,EAAuF,EAAvFA,MAAOC,EAAgF,EAAhFA,YAAaC,EAAmE,EAAnEA,OAAQC,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,GAAIC,EAAqC,EAArCA,OACvE,OACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKC,IAAI,GAAGC,IAAKP,EAAQQ,MAAO,CAACC,UAAU,UAAD,OAAYR,EAAZ,aAE5C,sBAAKI,UAAU,sBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,aAAf,SAA6BP,IAC7B,qBAAKO,UAAU,mBAAf,SAAmCN,OAErC,qBAAKM,UAAU,cAAf,SACE,wBAAQK,QAAS,kBAAMR,EAAOC,EAAI,YAIpCC,EAAS,qBAAKC,UAAU,cAAqB,SCtB/CM,G,MAAyB,0BAEzBC,EAAcC,eAAeC,QAAQH,GAIrCI,EAAa,ICRjB,WAAYC,GAAgB,IAAD,gCAD3BA,WAC2B,OAK3BC,WAAa,SAACd,EAAYF,GACxB,IAAMiB,EAAO,EAAKF,MAAMG,MAAK,SAACD,GAAD,OAAUf,IAAOe,EAAKf,WACtCiB,IAATF,IACFA,EAAKjB,UAAYiB,EAAKjB,SAAWA,GAAY,MAP/CoB,YAAmBC,MACnBA,KAAKN,MAAQA,EDME,CAFe,OAAhBJ,EAAuBW,KAAKC,MAAMZ,GETnB,CAC/B,CAACT,GAAI,IAAIL,MAAO,WAAYC,YAAa,cAAeC,OAAQ,uCAAwCC,SAAU,EAAGG,QAAQ,GAC7H,CAACD,GAAI,IAAIL,MAAO,WAAYC,YAAa,cAAeC,OAAQ,uCAAwCC,SAAU,EAAGG,QAAQ,GAC7H,CAACD,GAAI,IAAIL,MAAO,WAAYC,YAAa,cAAeC,OAAQ,uCAAwCC,SAAU,EAAGG,QAAQ,GAC7H,CAACD,GAAI,IAAIL,MAAO,WAAYC,YAAa,cAAeC,OAAQ,uCAAwCC,SAAU,EAAGG,QAAQ,GAC7H,CAACD,GAAI,IAAIL,MAAO,WAAYC,YAAa,cAAeC,OAAQ,uCAAwCC,SAAU,EAAGG,QAAQ,GAC7H,CAACD,GAAI,IAAIL,MAAO,WAAYC,YAAa,cAAeC,OAAQ,uCAAwCC,SAAU,EAAGG,QAAQ,KFOlHqB,EAAWC,aAAS,WAO/B,OANAC,qBAAU,WACRC,QAAQC,IAAI,sBACZ,IAAMC,EAAeP,KAAKQ,UAAUhB,EAAWC,OAC/CH,eAAemB,QAAQrB,EAAwBmB,MAI/C,qBAAKzB,UAAU,YAAf,SACGU,EAAWC,MAAMiB,KAAI,gBAAGnC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaI,EAAvB,EAAuBA,GAAIH,EAA3B,EAA2BA,OAAQC,EAAnC,EAAmCA,SAAUG,EAA7C,EAA6CA,OAA7C,OACpB,cAAC,EAAD,CAEED,GAAIA,EACJL,MAAOA,EACPC,YAAaA,EACbC,OAAQA,EACRC,SAAUA,EACVC,OAAQa,EAAWE,WACnBb,OAAQA,GAPHD,WGdA+B,MARf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,cAACoB,EAAD,OCOSU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7ea11608.chunk.js","sourcesContent":["import React from \"react\";\nimport './card.scss'\n\ninterface CardProps {\n  title: string;\n  description: string;\n  imgUrl: string;\n  rotation: number;\n  rotate: (id: string, deg: number) => void;\n  id: string;\n  isStar: boolean;\n}\n\nexport const Card = ({ title, description, imgUrl, rotation, rotate, id, isStar }: CardProps): JSX.Element => {\n  return (\n    <div className='card-item'>\n      <div className='card-image' >\n        <img alt='' src={imgUrl} style={{transform: `rotate(${rotation}deg)`}} />\n      </div>\n      <div className='card-bottom-section'>\n        <div className='card-info'>\n          <div className='card-title'>{title}</div>\n          <div className='card-description'>{description}</div>\n        </div>\n        <div className='card-rotate'>\n          <button onClick={() => rotate(id, 90)}></button>\n        </div>\n      </div>\n      {\n        isStar ? <div className='card-star'></div> : null\n      }\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { observer } from 'mobx-react';\nimport { CardsStore } from \"../../store/cards-store\";\nimport { mockCards } from \"../../mocks/cards-data\";\nimport { Card } from \"../card/card-component\";\nimport './card-list.scss';\n\nconst CARDSAPPSESSIONSTORAGE = 'cardsAppSessionStorage';\n\nconst sessionData = sessionStorage.getItem(CARDSAPPSESSIONSTORAGE);\n\nconst cardsData = sessionData !== null ? JSON.parse(sessionData): mockCards;\n\nconst cardsStore = new CardsStore(cardsData);\n\nexport const CardList = observer(() => {\n  useEffect(() => {\n    console.log('card list rerender');\n    const sessionCards = JSON.stringify(cardsStore.cards);\n    sessionStorage.setItem(CARDSAPPSESSIONSTORAGE, sessionCards);\n  });\n\n  return (\n    <div className='card-list'>\n      {cardsStore.cards.map(({ title, description, id, imgUrl, rotation, isStar }) => \n        <Card \n          key={id} \n          id={id} \n          title={title} \n          description={description} \n          imgUrl={imgUrl} \n          rotation={rotation} \n          rotate={cardsStore.rotateCard} \n          isStar={isStar}/>)\n      } \n    </div>\n  )\n})\n","import { makeAutoObservable } from 'mobx';\nimport { Card } from \"../types/card\";\n\nexport class CardsStore {\n  cards: Card[];\n  constructor(cards: Card[]) {\n    makeAutoObservable(this);\n    this.cards = cards;\n  }\n\n  rotateCard = (id: string, rotation: number) => {\n    const card = this.cards.find((card) => id === card.id);\n    if (card !== undefined) {\n      card.rotation = (card.rotation + rotation) % 360;\n    }\n  }\n}\n","import { Card } from '../types/card'\n\nexport const mockCards: Card[] = [\n  {id: '1',title: 'Picture1', description: 'Description', imgUrl: 'https://picsum.photos/id/237/200/300', rotation: 0, isStar: false}, \n  {id: '2',title: 'Picture2', description: 'Description', imgUrl: 'https://picsum.photos/id/237/200/300', rotation: 0, isStar: false}, \n  {id: '3',title: 'Picture3', description: 'Description', imgUrl: 'https://picsum.photos/id/237/200/300', rotation: 0, isStar: true}, \n  {id: '4',title: 'Picture4', description: 'Description', imgUrl: 'https://picsum.photos/id/237/200/300', rotation: 0, isStar: false}, \n  {id: '5',title: 'Picture5', description: 'Description', imgUrl: 'https://picsum.photos/id/237/200/300', rotation: 0, isStar: true}, \n  {id: '6',title: 'Picture6', description: 'Description', imgUrl: 'https://picsum.photos/id/237/200/300', rotation: 0, isStar: true}\n  ];\n","import React from 'react';\nimport './App.scss'\nimport { CardList } from './components/card-list/card-list-component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CardList />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}